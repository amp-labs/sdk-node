/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import {
  CreateInstallationAcceptEnum,
  installationCreateInstallation,
} from "../funcs/installationCreateInstallation.js";
import { installationDeleteInstallation } from "../funcs/installationDeleteInstallation.js";
import {
  GetInstallationAcceptEnum,
  installationGetInstallation,
} from "../funcs/installationGetInstallation.js";
import {
  installationListInstallations,
  ListInstallationsAcceptEnum,
} from "../funcs/installationListInstallations.js";
import {
  installationUpdateInstallation,
  UpdateInstallationAcceptEnum,
} from "../funcs/installationUpdateInstallation.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export { ListInstallationsAcceptEnum } from "../funcs/installationListInstallations.js";

export { CreateInstallationAcceptEnum } from "../funcs/installationCreateInstallation.js";

export { GetInstallationAcceptEnum } from "../funcs/installationGetInstallation.js";

export { UpdateInstallationAcceptEnum } from "../funcs/installationUpdateInstallation.js";

export class Installation extends ClientSDK {
  /**
   * List installations
   */
  async listInstallations(
    request: operations.ListInstallationsRequest,
    options?: RequestOptions & {
      acceptHeaderOverride?: ListInstallationsAcceptEnum;
    },
  ): Promise<operations.ListInstallationsResponse> {
    return unwrapAsync(installationListInstallations(
      this,
      request,
      options,
    ));
  }

  /**
   * Create a new installation
   */
  async createInstallation(
    request: operations.CreateInstallationRequest,
    options?: RequestOptions & {
      acceptHeaderOverride?: CreateInstallationAcceptEnum;
    },
  ): Promise<operations.CreateInstallationResponse> {
    return unwrapAsync(installationCreateInstallation(
      this,
      request,
      options,
    ));
  }

  /**
   * Get an installation
   */
  async getInstallation(
    request: operations.GetInstallationRequest,
    options?: RequestOptions & {
      acceptHeaderOverride?: GetInstallationAcceptEnum;
    },
  ): Promise<operations.GetInstallationResponse> {
    return unwrapAsync(installationGetInstallation(
      this,
      request,
      options,
    ));
  }

  /**
   * Delete an installation
   */
  async deleteInstallation(
    request: operations.DeleteInstallationRequest,
    options?: RequestOptions,
  ): Promise<operations.DeleteInstallationResponseBody | undefined> {
    return unwrapAsync(installationDeleteInstallation(
      this,
      request,
      options,
    ));
  }

  /**
   * Update an installation
   */
  async updateInstallation(
    request: operations.UpdateInstallationRequest,
    options?: RequestOptions & {
      acceptHeaderOverride?: UpdateInstallationAcceptEnum;
    },
  ): Promise<operations.UpdateInstallationResponse> {
    return unwrapAsync(installationUpdateInstallation(
      this,
      request,
      options,
    ));
  }
}
