/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { revisionCreateRevision } from "../funcs/revisionCreateRevision.js";
import {
  GetHydratedRevisionAcceptEnum,
  revisionGetHydratedRevision,
} from "../funcs/revisionGetHydratedRevision.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export { GetHydratedRevisionAcceptEnum } from "../funcs/revisionGetHydratedRevision.js";

export class Revision extends ClientSDK {
  /**
   * Create a new revision
   */
  async createRevision(
    request: operations.CreateRevisionRequest,
    options?: RequestOptions,
  ): Promise<operations.CreateRevisionResponseBody | undefined> {
    return unwrapAsync(revisionCreateRevision(
      this,
      request,
      options,
    ));
  }

  /**
   * Hydrate a revision
   *
   * @remarks
   * Hydrate a revision with information from the consumer's SaaS instance.
   */
  async getHydratedRevision(
    request: operations.GetHydratedRevisionRequest,
    options?: RequestOptions & {
      acceptHeaderOverride?: GetHydratedRevisionAcceptEnum;
    },
  ): Promise<operations.GetHydratedRevisionResponse> {
    return unwrapAsync(revisionGetHydratedRevision(
      this,
      request,
      options,
    ));
  }
}
