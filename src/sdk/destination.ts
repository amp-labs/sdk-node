/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import {
  CreateDestinationAcceptEnum,
  destinationCreateDestination,
} from "../funcs/destinationCreateDestination.js";
import { destinationDeleteDestination } from "../funcs/destinationDeleteDestination.js";
import {
  destinationGetDestination,
  GetDestinationAcceptEnum,
} from "../funcs/destinationGetDestination.js";
import {
  destinationListDestinations,
  ListDestinationsAcceptEnum,
} from "../funcs/destinationListDestinations.js";
import {
  destinationUpdateDestination,
  UpdateDestinationAcceptEnum,
} from "../funcs/destinationUpdateDestination.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export { CreateDestinationAcceptEnum } from "../funcs/destinationCreateDestination.js";

export { ListDestinationsAcceptEnum } from "../funcs/destinationListDestinations.js";

export { GetDestinationAcceptEnum } from "../funcs/destinationGetDestination.js";

export { UpdateDestinationAcceptEnum } from "../funcs/destinationUpdateDestination.js";

export class Destination extends ClientSDK {
  /**
   * Create a new destination
   */
  async createDestination(
    request: operations.CreateDestinationRequest,
    options?: RequestOptions & {
      acceptHeaderOverride?: CreateDestinationAcceptEnum;
    },
  ): Promise<operations.CreateDestinationResponse> {
    return unwrapAsync(destinationCreateDestination(
      this,
      request,
      options,
    ));
  }

  /**
   * List destinations
   */
  async listDestinations(
    request: operations.ListDestinationsRequest,
    options?: RequestOptions & {
      acceptHeaderOverride?: ListDestinationsAcceptEnum;
    },
  ): Promise<operations.ListDestinationsResponse> {
    return unwrapAsync(destinationListDestinations(
      this,
      request,
      options,
    ));
  }

  /**
   * Get a destination
   */
  async getDestination(
    request: operations.GetDestinationRequest,
    options?: RequestOptions & {
      acceptHeaderOverride?: GetDestinationAcceptEnum;
    },
  ): Promise<operations.GetDestinationResponse> {
    return unwrapAsync(destinationGetDestination(
      this,
      request,
      options,
    ));
  }

  /**
   * Update a destination
   */
  async updateDestination(
    request: operations.UpdateDestinationRequest,
    options?: RequestOptions & {
      acceptHeaderOverride?: UpdateDestinationAcceptEnum;
    },
  ): Promise<operations.UpdateDestinationResponse> {
    return unwrapAsync(destinationUpdateDestination(
      this,
      request,
      options,
    ));
  }

  /**
   * Delete a destination
   */
  async deleteDestination(
    request: operations.DeleteDestinationRequest,
    options?: RequestOptions,
  ): Promise<operations.DeleteDestinationResponseBody | undefined> {
    return unwrapAsync(destinationDeleteDestination(
      this,
      request,
      options,
    ));
  }
}
